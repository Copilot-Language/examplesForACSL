/* Header file for internal. Automatically generated by SBV. Do not edit! */

#ifndef __internal__HEADER_INCLUDED__
#define __internal__HEADER_INCLUDED__

#include <inttypes.h>
#include <stdint.h>
#include <stdbool.h>
#include <math.h>

/* The boolean type */
typedef bool SBool;

/* The float type */
typedef float SFloat;

/* The double type */
typedef double SDouble;

/* Unsigned bit-vectors */
typedef uint8_t  SWord8 ;
typedef uint16_t SWord16;
typedef uint32_t SWord32;
typedef uint64_t SWord64;

/* Signed bit-vectors */
typedef int8_t  SInt8 ;
typedef int16_t SInt16;
typedef int32_t SInt32;
typedef int64_t SInt64;

/* Entry point prototypes: */
SWord64 update_state_0(const SWord64 *queue_0,
                       const SWord32 ptr_0);
SBool update_state_2(const SBool *queue_2, const SWord32 ptr_2);
SBool update_state_1(const SBool *queue_2, const SWord32 ptr_2,
                     const SBool *queue_1, const SWord32 ptr_1);
SWord64 update_state_3(const SWord64 *queue_3,
                       const SWord32 ptr_3);
SWord64 update_state_4(const SWord64 *queue_4,
                       const SWord32 ptr_4);
SWord8 update_state_5(const SWord8 *queue_5, const SWord32 ptr_5);
SWord8 update_state_6(const SWord8 *queue_6, const SWord32 ptr_6);
SBool observer_i(const SWord64 *queue_4, const SWord32 ptr_4);
SBool trigger_guard_h(const SWord64 ext_e3, const SWord64 *queue_0,
                      const SWord32 ptr_0);
SInt8 trigger_h_arg_0();
SBool trigger_guard_g(const SBool *queue_1, const SWord32 ptr_1);
SWord64 trigger_g_arg_0(const SWord64 ext_e1, const SWord64 ext_e2,
                        const SWord64 *queue_3, const SWord32 ptr_3);
SBool trigger_guard_f(const SBool *queue_2, const SWord32 ptr_2);
SWord64 trigger_f_arg_0(const SWord64 *queue_0,
                        const SWord32 ptr_0);
SWord64 trigger_f_arg_1(const SWord64 ext_e1,
                        const SWord64 ext_e2);
SBool trigger_guard_e();
SWord64 trigger_e_arg_0(const SWord64 *queue_0,
                        const SWord32 ptr_0);
SWord64 trigger_e_arg_1(const SWord64 *queue_4,
                        const SWord32 ptr_4);
SWord64 trigger_e_arg_2(const SWord64 ext_e1,
                        const SWord64 ext_e2);
SWord8 trigger_e_arg_3(const SWord8 *queue_5, const SWord32 ptr_5,
                       const SWord8 *queue_6, const SWord32 ptr_6);

#endif /* __internal__HEADER_INCLUDED__ */
